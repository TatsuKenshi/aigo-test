{"version":3,"file":"static/js/161.cf5d09c3.chunk.js","mappings":"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","sources":["components/FuturePlans.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ProgressiveImage from \"react-progressive-graceful-image\";\nimport heroSmall from \"../assets/images/hero-test-small.jpg\";\nimport mission from \"../assets/images/mission.png\";\nimport vision from \"../assets/images/vision.png\";\nimport axios from \"axios\";\n\nconst FuturePlans = () => {\n  const [missions, setMissions] = useState([]);\n  const [plans, setPlans] = useState([]);\n  const missionsUrl = process.env.REACT_APP_MISSIONS_URL;\n  const plansUrl = process.env.REACT_APP_PLANS_URL;\n\n  const getAllMissions = async () => {\n    try {\n      const response = await axios.get(missionsUrl);\n      const data = response.data.missions;\n      setMissions(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getAllPlans = async () => {\n    try {\n      const response = await axios.get(plansUrl);\n      const data = response.data.plans;\n      setPlans(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getAllMissions();\n    getAllPlans();\n  }, []);\n\n  return (\n    <section className=\"p-8 bg-[#ffffef]\">\n      {/* title div */}\n      <div className=\"text-center max-w-[1200px] mx-auto\">\n        <h1 className=\"text-[#9e1918] text-3xl font-extrabold\">\n          Our mission and vision\n        </h1>\n        <div className=\"h-1 w-48 bg-[#9e1918] mx-auto mt-1\"></div>\n        <p className=\"mt-4 text-justify\">\n          Lorem ipsum dolor sit amet consectetur adipisicing elit. Facilis\n          adipisci totam explicabo beatae, doloremque repellendus. Eveniet\n          veniam dolore ad distinctio iusto sed provident eos in magni, vero\n          reiciendis inventore quisquam? Maxime a sint mollitia tenetur ipsa\n          tempora harum autem, ullam laborum est adipisci iste atque quas\n          excepturi modi. Esse, magnam?\n        </p>\n      </div>\n\n      <div className=\"max-w-[1200px] mx-auto grid md:grid-cols-2 gap-8 mt-8\">\n        <article className=\"hover:shadow-lg\">\n          <div className=\"w-full py-8 grid place-content-center\">\n            <ProgressiveImage src={missions?.[0]?.img} placeholder={heroSmall}>\n              {(src, loading) => (\n                <img\n                  src={src}\n                  alt=\"mission\"\n                  className={`image${\n                    loading ? \" loading\" : \" loaded\"\n                  } w-[150px] h-[150px] md:-w-[200px] md-h-[200px] lg:w-[250px] lg:h-[250px] rounded-[100%]`}\n                />\n              )}\n            </ProgressiveImage>\n          </div>\n          <div className=\"p-2\">\n            <h2 className=\"text-[#a62817] capitalize font-bold text-2xl\">\n              {missions?.[0]?.titleEng}\n            </h2>\n            <p className=\"my-2 text-md text-slate-800 text-justify\">\n              {missions?.[0]?.textEng}\n            </p>\n          </div>\n        </article>\n\n        <article className=\"hover:shadow-lg\">\n          <div className=\"p-2\">\n            <h2 className=\"text-[#a62817] capitalize font-bold text-2xl\">\n              {missions?.[1]?.titleSrb}\n            </h2>\n            <p className=\"my-2 text-md text-slate-800 text-justify\">\n              {missions?.[1]?.textSrb}\n            </p>\n          </div>\n          <div className=\"w-full py-8 grid place-content-center\">\n            <ProgressiveImage src={missions?.[1]?.img} placeholder={heroSmall}>\n              {(src, loading) => (\n                <img\n                  src={src}\n                  alt=\"vision\"\n                  className={`image${\n                    loading ? \" loading\" : \" loaded\"\n                  } w-[150px] h-[150px] md:-w-[200px] md-h-[200px] lg:w-[250px] lg:h-[250px] rounded-[100%]`}\n                />\n              )}\n            </ProgressiveImage>\n          </div>\n        </article>\n      </div>\n\n      {/* title div */}\n      <div className=\"max-w-[1200px] mx-auto mt-8\">\n        <h1 className=\"text-[#9e1918] text-3xl font-extrabold text-center \">\n          What's in store\n        </h1>\n        <div className=\"h-1 w-48 bg-[#9e1918] mx-auto mt-1\"></div>\n\n        <div className=\"p-2 grid md:grid-cols-2 gap-8\">\n          {plans.map((plan) => {\n            return (\n              <div key={plan._id}>\n                <p className=\"mt-4 md:mt-0 text-[#a62817] font-bold text-xl\">\n                  {plan.titleEng}\n                </p>\n                <p className=\"text-md text-slate-800 text-justify\">\n                  {plan.textEng}\n                </p>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default FuturePlans;\n"],"names":["_missions$","_missions$2","_missions$3","_missions$4","_missions$5","_missions$6","_useState","useState","_useState2","_slicedToArray","missions","setMissions","_useState3","_useState4","plans","setPlans","getAllMissions","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_context","prev","next","axios","get","process","sent","t0","console","log","stop","apply","arguments","getAllPlans","_ref2","_callee2","_context2","useEffect","_jsxs","className","children","_jsx","ProgressiveImage","src","img","placeholder","heroSmall","loading","alt","concat","titleEng","textEng","titleSrb","textSrb","map","plan","_id"],"sourceRoot":""}