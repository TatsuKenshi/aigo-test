{"version":3,"file":"static/js/427.b6473b49.chunk.js","mappings":"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","sources":["components/ContactForm.jsx"],"sourcesContent":["import { useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport i18next from \"i18next\";\nimport axios from \"axios\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\n\nconst ContactForm = () => {\n  const [messageSent, setMessageSent] = useState(\"\");\n  const navigate = useNavigate();\n  const language = i18next.language;\n  const captchaRef = useRef(null);\n  const captchaUrl = process.env.REACT_APP_CAPTCHA_URL;\n  const emailUrl = process.env.REACT_APP_EMAIL_URL;\n\n  const {\n    register,\n    formState: { errors, isValid },\n    getValues,\n  } = useForm({\n    mode: \"onChange\",\n    delayError: 1000,\n    defaultValues: {\n      user_name: \"\",\n      user_email: \"\",\n      message: \"\",\n    },\n  });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const token = captchaRef.current.getValue();\n    captchaRef.current.reset();\n    try {\n      const response = await axios.post(captchaUrl, {\n        token,\n      });\n\n      console.log(response);\n\n      if (response.data === \"Human 游녿 游놀\") {\n        const myName = getValues(\"user_name\");\n        const myMail = getValues(\"user_email\");\n        const myMessage = getValues(\"message\");\n        const data = {\n          myName: myName,\n          myEmail: myMail,\n          myMessage: myMessage,\n        };\n\n        setMessageSent(`\n          ${\n            language === \"en\"\n              ? \"Your message has been sent. You will be redirected to the home page shortly.\"\n              : \"Va코a poruka je poslata. Ubrzo 캖ete biti preba캜eni na po캜etnu stranu.\"\n          }\n          `);\n\n        setTimeout(() => {\n          navigate(\"/\");\n        }, 7000);\n\n        const sendMail = await axios.post(emailUrl, data);\n      } else {\n        setMessageSent(`\n          ${\n            language === \"en\"\n              ? \"Your message wasn't sent. Refresh the page and complete the captcha first.\"\n              : \"Va코a poruka nije poslata. Osvezite stranicu i kompletirajete captcha test pre slanja.\"\n          }\n          `);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <section className=\"max-w-[900px] mx-auto my-4\">\n      <form\n        data-netlify=\"true\"\n        data-netlify-recaptcha=\"true\"\n        onSubmit={(e) => {\n          handleSubmit(e);\n        }}\n      >\n        {/* name input section */}\n        <div className=\"mb-4 w-full mx-auto\">\n          <div>\n            <label\n              htmlFor=\"user_name\"\n              className=\"text-xl font-bold text-[#a62817]\"\n            >\n              {language === \"en\" ? \"Your name\" : \"Va코e ime i prezime\"}\n            </label>\n          </div>\n          <div>\n            <input\n              {...register(\"user_name\", {\n                required: `${\n                  language === \"en\"\n                    ? \"This field is required.\"\n                    : \"Ime je obavezno polje.\"\n                }`,\n                minLength: {\n                  value: 4,\n                  message: `${\n                    language === \"en\"\n                      ? \"The name is too short.\"\n                      : \"Ime je prekratko.\"\n                  }`,\n                },\n              })}\n              id=\"user_name\"\n              name=\"user_name\"\n              className=\"border-4 border-[#a62817] w-full h-12 rounded-lg px-2 text-xl\"\n            />\n          </div>\n          {/* error message paragraph */}\n          <p role=\"alert\" className=\"text-xl font-bold text-[#a62817]\">\n            {errors?.user_name?.message}\n          </p>\n        </div>\n\n        {/* email input section */}\n        <div className=\"mb-4 w-full mx-auto\">\n          <div>\n            <label\n              htmlFor=\"user_email\"\n              className=\"text-xl font-bold text-[#a62817]\"\n            >\n              {language === \"en\" ? \"Your email\" : \"Va코 email\"}\n            </label>\n          </div>\n          <div>\n            <input\n              type=\"email\"\n              id=\"user_email\"\n              {...register(\"user_email\", {\n                required: `${\n                  language === \"en\"\n                    ? \"Email is required.\"\n                    : \"Email je obavezno polje.\"\n                }`,\n                pattern: {\n                  value: /\\S+@\\S+\\.\\S+/,\n                  message: `${\n                    language === \"en\"\n                      ? \"Entered value does not match the email format.\"\n                      : \"Unesena vrednost nije u validnom email formatu.\"\n                  }`,\n                },\n              })}\n              aria-invalid={errors.user_email ? \"true\" : \"false\"}\n              className=\"border-4 border-[#a62817] w-full h-12 rounded-lg px-2 text-xl\"\n              name=\"user_email\"\n            />\n          </div>\n          {/* error message paragraph */}\n          <p role=\"alert\" className=\"text-xl font-bold text-[#a62817]\">\n            {errors.user_email?.message}\n          </p>\n        </div>\n\n        {/* message input section */}\n        <div className=\"mb-4 w-full mx-auto\">\n          <div>\n            <label\n              htmlFor=\"message\"\n              className=\"text-xl font-bold text-[#a62817]\"\n            >\n              {language === \"en\" ? \"Your message\" : \"Va코a poruka\"}\n            </label>\n          </div>\n          <div>\n            <textarea\n              rows={4}\n              cols={50}\n              {...register(\"message\", {\n                required: `${\n                  language === \"en\"\n                    ? \"Message field is required.\"\n                    : \"Poruka je obavezno polje.\"\n                }`,\n                minLength: {\n                  value: 4,\n                  message: `${\n                    language === \"en\"\n                      ? \"The message is too short.\"\n                      : \"Poruka je prekratka.\"\n                  }`,\n                },\n              })}\n              id=\"message\"\n              className=\"border-4 border-[#a62817] w-full h-40 rounded-lg px-2 text-xl\"\n              name=\"message\"\n            />\n          </div>\n          {/* error message paragraph */}\n          <p role=\"alert\" className=\"text-xl font-bold text-[#a62817]\">\n            {errors?.message?.message}\n          </p>\n        </div>\n\n        {/* reCAPTCHA section */}\n        <div className=\"mb-4 w-full mx-auto flex justify-center\">\n          <ReCAPTCHA\n            sitekey={process.env.REACT_APP_SITE_KEY}\n            ref={captchaRef}\n          />\n        </div>\n\n        {/* submit button section */}\n        <div className=\"mb-4 w-full mx-auto lg:text-center\">\n          {/* {captchaRef?.current?.state ? ( */}\n          <button\n            type=\"submit\"\n            className=\"border-4 border-[#a62817] text-[#a62817] font-bold rounded-lg px-2 py-1 text-xl w-full lg:w-64\"\n            disabled={!isValid}\n          >\n            {language === \"en\" ? \"Send\" : \"Po코alji\"}\n          </button>\n          {/* ) : null} */}\n        </div>\n\n        {/* message sent section */}\n        <div className=\"mb-4 w-full sm:w-10/12 md:w-8/12 mx-auto\">\n          <p className=\"text-xl font-bold text-[#a62817]\">{messageSent}</p>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default ContactForm;\n"],"names":["_errors$user_name","_errors$user_email","_errors$message","_useState","useState","_useState2","_slicedToArray","messageSent","setMessageSent","navigate","useNavigate","language","i18next","captchaRef","useRef","_useForm","useForm","mode","delayError","defaultValues","user_name","user_email","message","register","_useForm$formState","formState","errors","isValid","getValues","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","token","response","myName","myMail","myMessage","data","wrap","_context","prev","next","preventDefault","current","getValue","reset","axios","post","process","sent","console","log","myEmail","concat","setTimeout","t0","stop","_x","apply","arguments","_jsx","className","children","_jsxs","onSubmit","htmlFor","_objectSpread","required","minLength","value","id","name","role","type","pattern","rows","cols","ReCAPTCHA","sitekey","ref","disabled"],"sourceRoot":""}